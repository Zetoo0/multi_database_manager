MSSQL|
------
List All Tables:
----------------
SELECT TABLE_NAME
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_TYPE = 'BASE TABLE';

List All Columns in a Table:
---------------------------
SELECT COLUMN_NAME, DATA_TYPE
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'your_table_name';

List All Views:
---------------
SELECT TABLE_NAME    
FROM INFORMATION_SCHEMA.VIEWS;

List All Stored Procedures:
---------------------------
SELECT name
FROM sys.procedures;

List databases:
---------------
SELECT name FROM sys.databases

List Functions:
---------------
SELECT name, type_desc
FROM sys.objects
WHERE type IN ('FN', 'IF', 'TF');

List Trigger Functions:
-----------------------
SELECT name, type_desc
FROM sys.objects
WHERE type = 'TR';

List Event Triggers: #Mssql doesnt have event triggers like in postgres but there are DDL triggers
--------------------
SELECT name, type_desc
FROM sys.triggers
WHERE is_ms_shipped = 0 AND parent_class_desc = 'DATABASE_DDL_TRIGGER';

List Aggregates:
----------------
SELECT name
FROM sys.objects
WHERE type = 'AF';

List Materalized Views: #In MSSQL, there is no direct support for materialized views, but you can use Indexed Views
-----------------------
SELECT name, type_desc
FROM sys.views
WHERE is_ms_shipped = 0;

List Types:
-----------
SELECT name, system_type_id, user_type_id
FROM sys.types
WHERE is_user_defined = 1;

List Languages:
---------------
#Mssql only supports T-SQL

List Catalogs:
--------------
SELECT name
FROM sys.databases;

List Foreign Data Wrappers: #MSSQL does not have a concept of "foreign data wrappers" like PostgreSQL. However, MSSQL uses Linked Servers to connect to other databases
---------------------------
EXEC sp_linkedservers;

List Schemas:
-------------
SELECT name
FROM sys.schemas;

List Indexes:
-------------
SELECT i.name, o.name AS table_name, i.type_desc AS index_type, i.is_unique AS is_unique, i.is_primary_key AS is_primary_key
FROM sys.indexes i
JOIN sys.objects o ON i.object_id = o.object_id
WHERE o.type = 'U';  -- 'U' means user table

List Constraints (Primary, Foreign, Unique Keys):
-------------------------------------------------
SELECT name, type_desc 
FROM sys.objects 
WHERE type IN ('PK', 'F', 'UQ');  -- PK: Primary Key, F: Foreign Key, UQ: Unique Key

List Sequences:
---------------
SELECT name 
FROM sys.sequences;

List Roles and Users:
---------------------
SELECT i.name, o.name AS table_name
FROM sys.indexes i
JOIN sys.objects o ON i.object_id = o.object_id
WHERE o.type = 'U';  -- 'U' means user table

List Table Statistics:
----------------------
EXEC sp_spaceused 'your_table_name';

List Active Sessions:
---------------------
SELECT session_id, login_name 
FROM sys.dm_exec_sessions;

List Locks:
-----------
SELECT * FROM sys.dm_tran_locks;

List Partitions:
----------------
SELECT * 
FROM sys.partitions 
WHERE object_id = OBJECT_ID('your_table_name');

List User Privileges:
---------------------
SELECT dp.name AS Principal, 
       dp.type_desc AS PrincipalType,
       o.name AS Object,
       p.permission_name
FROM sys.database_permissions p
JOIN sys.objects o ON p.major_id = o.object_id
JOIN sys.database_principals dp ON p.grantee_principal_id = dp.principal_id;

List Database Settings:
-----------------------
SELECT * FROM sys.configurations;

List Foreign Key Relationships
------------------------------
SELECT fk.name AS FK_name, tp.name AS parent_table, cp.name AS parent_column, tr.name AS ref_table, cr.name AS ref_column
FROM sys.foreign_keys AS fk
INNER JOIN sys.tables AS tp ON fk.parent_object_id = tp.object_id
INNER JOIN sys.tables AS tr ON fk.referenced_object_id = tr.object_id
INNER JOIN sys.foreign_key_columns AS fkc ON fk.object_id = fkc.constraint_object_id
INNER JOIN sys.columns AS cp ON fkc.parent_column_id = cp.column_id AND fkc.parent_object_id = cp.object_id
INNER JOIN sys.columns AS cr ON fkc.referenced_column_id = cr.column_id AND fkc.referenced_object_id = cr.object_id;

Lis Default Values For Columns
------------------------------
SELECT COLUMN_NAME, COLUMN_DEFAULT
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'your_table_name';

List All Catalog Objects:
-------------------------
SELECT 
    o.object_id,
    o.name,
    s.schema_id,
    o.type,
    o.create_date,
    o.modify_date
FROM sys.objects o
JOIN sys.schemas s ON o.schema_id = s.schema_id
WHERE o.type IN ('U', 'V', 'P', 'FN', 'IF', 'TF');  -- U: user table, V: view, P: procedure, FN: scalar function, IF: inline function, TF: table-valued function


List Group Roles:
-----------------
SELECT name, principal_id, type_desc FROM sys.database_principals WHERE type = 'R';

List Publications:
------------------
SELECT name, description, enabled FROM sys.publications;

List Collations:
----------------
SELECT name, description FROM sys.fn_helpcollations();

List FTS Configurations:
------------------------
SELECT fulltext_catalog_id, name FROM sys.fulltext_catalogs;

List FTS Dictionaries:
----------------------
SELECT * FROM sys.fulltext_index_columns;

List FTS Parsers:
-----------------
SELECT * FROM sys.fulltext_stoplists;

List Tablespaces:
-----------------
SELECT name, type, data_space_id FROM sys.filegroups;

-----
MYSQL|
------

List All Tables:
----------------
SHOW TABLES;

List All Columns in a Table:
----------------------------
SHOW COLUMNS FROM your_table_name;

List All Views:
---------------
SHOW FULL TABLES WHERE Table_type = 'VIEW';

List All Stored Procedures:
---------------------------
SHOW PROCEDURE STATUS WHERE Db = 'your_database_name';

List databases:
---------------
SHOW DATABASES

List Functions:
---------------
SHOW FUNCTION STATUS;

List Trigger Functions:
-----------------------
SHOW TRIGGERS;

List Event Triggers:
--------------------
MYSQL doesnt support event triggers

List Aggregates: 
----------------
MySQL does not support custom aggregate functions out of the box.

List Materalized Views:
-----------------------
MySQL does not support materialized views

List Types:
-----------
MySQL does not have a dedicated command to list custom types.

List Languages:
---------------
MySQL supports only SQL, so no such query is applicable.

List Catalogs:
--------------
SHOW DATABASES;

List Foreign Data Wrappers:
---------------------------
MySQL does not have foreign data wrappers.

List Schemas:
-------------
SELECT schema_name 
FROM information_schema.schemata;

List Indexes:
-------------
--SHOW INDEXES FROM 'your_table_name';--
SELECT 
    TABLE_NAME AS table_name,
    INDEX_NAME AS index_name,
    COLUMN_NAME AS column_name,
    NON_UNIQUE AS non_unique,
    INDEX_TYPE AS index_type
FROM information_schema.statistics
WHERE TABLE_SCHEMA = 'your_database_name';


List Constraints (Primary, Foreign, Unique Keys):
-------------------------------------------------
SHOW CREATE TABLE your_table_name;  -- Constraints are included in the table definition

List Sequences:
---------------
MySQL: MySQL does not have sequences (uses AUTO_INCREMENT).

List Roles and Users:
---------------------
SELECT user FROM mysql.user;

List Table Statistics:
----------------------
SHOW TABLE STATUS LIKE 'your_table_name';

List Active Sessions:
---------------------
SHOW PROCESSLIST;

List Locks:
-----------
SHOW ENGINE INNODB STATUS;

List Partitions:
----------------
SELECT * 
FROM information_schema.partitions 
WHERE table_name = 'your_table_name';

List User Privileges:
---------------------
SHOW GRANTS FOR 'your_user'@'host';

List Database Settings:
-----------------------
SHOW VARIABLES;

List All Catalog Objects:
-------------------------
SELECT *
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA = 'your_database_name';

List Group Roles:
-----------------
SELECT user, host FROM mysql.user WHERE user_type = 'ROLE';

List Collations:
----------------
SELECT collation_name, character_set_name FROM information_schema.COLLATIONS;

List Tablespaces:
SELECT TABLESPACE_NAME, ENGINE, LOGFILE_GROUP_NAME FROM information_schema.tablespaces;

------
SQLITE|
------

List All Tables:
----------------
SELECT name
FROM sqlite_master
WHERE type = 'table';

List All Columns in a Table:
----------------------------
PRAGMA table_info(your_table_name);

List All Views:
---------------
SELECT name
FROM sqlite_master
WHERE type = 'view';

List All Stored Procedures:
--------------------------    
Sqlite doesnt support stored procedures

List Functions:
---------------
SQLite does not support stored functions

List Trigger Functions:
-----------------------
SELECT name 
FROM sqlite_master 
WHERE type = 'trigger';

List Event Triggers:
--------------------
SQLite does not have event triggers.

List Aggregates:
----------------
SQLite does not support custom aggregate functions.

List Materalized Views:
-----------------------
SQLite does not support materialized views.

List Types:
-----------
SQLite uses dynamic typing and does not have a system of custom types.

List Languages:
---------------
SQLite supports only SQL, so no such query is applicable.

List Catalogs:
--------------
SQLite does not have a catalog system; each .db file is essentially its own database.

List Foreign Data Wrappers:
---------------------------
SQLite does not support foreign data wrappers.

List Schemas:
-------------
SQLite does not support schemas, as each database file is its own schema.

List Indexes:
-------------
SELECT name AS index_name, tbl_name AS table_name, sql AS DEFINITION
FROM sqlite_master 
WHERE type = 'index';

List Constraints (Primary, Foreign, Unique Keys):
-------------------------------------------------
PRAGMA foreign_key_list('your_table_name');

List Sequences:
---------------
SQLite does not support sequences directly.

List Roles and Users:
---------------------
SQLite does not have user roles or privileges natively.

List Table Statistics:
----------------------
SQLite does not have a direct way of fetching table statistics.

List Active Sessions:
---------------------
SQLite does not have session tracking.

List Locks:
-----------
SQLite does not support detailed locking mechanisms.

List Partitions:
----------------
SQLite does not support partitioning.

List User Privileges:
---------------------
SQLite does not have a privilege management system.

List Database Settings: #SQLite does not have a settings system, but you can query pragmas
-----------------------
PRAGMA encoding;
PRAGMA journal_mode;

List All Catalog Objects:
-------------------------
SELECT *
FROM sqlite_master;

List Collations:
----------------
PRAGMA collation_list;

List FTS Configurations, Dictionaries, Parsers, Templates:
----------------------------------------------------------
SELECT name FROM sqlite_master WHERE type = 'table' AND name LIKE 'fts%';

--------
POSTGRES|
--------
List All Tables:
-----------------
SELECT table_name
FROM information_schema.tables
WHERE table_schema = 'public' AND table_type = 'BASE TABLE';

List All Columns in a Table:
----------------------------
SELECT column_name, data_type
FROM information_schema.columns
WHERE table_name = 'your_table_name';

List All Views:
----------------
SELECT table_name
FROM information_schema.views
WHERE table_schema = 'public';

List All Stored Procedures:
---------------------------
SELECT routine_name
FROM information_schema.routines
WHERE routine_type = 'PROCEDURE' AND specific_schema = 'public';

List Databases:
---------------
SELECT datname 
FROM pg_database 
WHERE datistemplate=false;

List Functions:
---------------
SELECT routine_name, routine_type
FROM information_schema.routines
WHERE routine_type = 'FUNCTION';

List Trigger Functions:
-----------------------
SELECT tgname 
FROM pg_trigger;

List Event Triggers:
--------------------
SELECT evtname 
FROM pg_event_trigger;

List Aggregates:
----------------
SELECT proname 
FROM pg_proc 
WHERE proisagg = true;

List Materalized Views:
-----------------------
SELECT matviewname 
FROM pg_matviews;

List Types:
-----------
SELECT typname 
FROM pg_type 
WHERE typtype = 'b';  -- base types

List Languages:
---------------
SELECT lanname 
FROM pg_language;

List Catalogs:
--------------
SELECT datname 
FROM pg_database;

List Foreign Data Wrappers:
---------------------------
SELECT fdwname 
FROM pg_foreign_data_wrapper;

List Schemas:
-------------
SELECT schema_name 
FROM information_schema.schemata;

List Indexes:
-------------
SELECT indexname, indexdef, indrelid, indkey
FROM pg_indexes 
WHERE schemaname = 'public';

List Constraints (Primary, Foreign, Unique Keys):
-------------------------------------------------
SELECT constraint_name, constraint_type
FROM information_schema.table_constraints 
WHERE table_schema = 'public';

List Sequences:
---------------
SELECT sequence_name 
FROM information_schema.sequences 
WHERE sequence_schema = 'public';

List Roles and Users:
---------------------
SELECT rolname 
FROM pg_roles;

List Table Statistics:
----------------------
SELECT relname, n_live_tup, n_dead_tup
FROM pg_stat_user_tables;

List Active Sessions:
---------------------
SELECT pid, usename, application_name, client_addr 
FROM pg_stat_activity;

List Locks:
-----------
SELECT * FROM pg_locks;

List Partitions:
----------------
SELECT * 
FROM pg_partitions 
WHERE tablename = 'your_table_name';

List User Privileges:
---------------------
SELECT grantee, privilege_type, table_name 
FROM information_schema.role_table_grants 
WHERE grantee = 'your_user';

List Database Settings:
-----------------------
SHOW ALL;

List Foreign Key Relationships
------------------------------
SELECT conname AS constraint_name, conrelid::regclass AS table_name,
       a.attname AS column_name, confrelid::regclass AS foreign_table_name,
       af.attname AS foreign_column_name
FROM   pg_constraint
JOIN   pg_attribute a ON a.attnum = ANY(conkey) AND a.attrelid = conrelid
JOIN   pg_attribute af ON af.attnum = ANY(confkey) AND af.attrelid = confrelid
WHERE  contype = 'f';

List Triggers Associated A Specific Table
-----------------------------------------
SELECT tgname
FROM pg_trigger
WHERE tgrelid = 'your_table_name'::regclass;

List Default Values For Columns
-------------------------------
SELECT column_name, column_default
FROM information_schema.columns
WHERE table_name = 'your_table_name';
       
List All Catalog Objects:
-------------------------
SELECT 
    oid,
    relname,
    relnamespace,
    relowner,
    relam,
    reltuples,
    relpages,
    relchecks,
FROM pg_catalog.pg_class
WHERE relkind IN ('r', 'v', 'p', 'S');  -- r: table, v: view, p: procedure, S: sequence


List Group Roles:
-----------------
SELECT rolname, rolsuper, rolcanlogin FROM pg_roles WHERE rolcanlogin = false;

List Casts:
-----------
SELECT castsource::regtype, casttarget::regtype, castfunc FROM pg_cast;

List Publications:
------------------
SELECT pubname, pubowner FROM pg_publication;

List Collations:
----------------
SELECT collname, collnamespace, collencoding FROM pg_collation;

List Domains:
-------------
SELECT domain_name, data_type, domain_default FROM information_schema.domains;

List FTS Configurations:
------------------------
SELECT cfgname, cfgnamespace FROM pg_ts_config;

List FTS Dictionaries:
----------------------
SELECT dictname, dicttemplate FROM pg_ts_dict;

List FTS Parsers:
-----------------
SELECT prsname, prsstart FROM pg_ts_parser;

List FTS Templates:
-------------------
SELECT tmplname, tmplinit FROM pg_ts_template;

List Tablespaces:
-----------------
SELECT spcname, spclocation, spcowner FROM pg_tablespace;

-------
Oracle|
-------

List Tables:
------------
SELECT  table_name
FROM all_tables
WHERE owner = 'YOUR_SCHEMA';

List Columns in a Table
-----------------------
SELECT 
    column_name,
    data_type,
    data_length,
    nullable
FROM all_tab_columns
WHERE table_name = 'YOUR_TABLE_NAME'
  AND owner = 'YOUR_SCHEMA';

List Views
----------
SELECT 
    view_name
FROM all_views
WHERE owner = 'YOUR_SCHEMA';

List Stored Procedures
----------------------
SELECT 
    object_name
FROM all_procedures
WHERE object_type = 'PROCEDURE'
  AND owner = 'YOUR_SCHEMA';

List Functions
--------------
SELECT 
    object_name,
    object_type
FROM all_procedures
WHERE object_type = 'FUNCTION'
  AND owner = 'YOUR_SCHEMA';

List Triggers
-------------
SELECT 
    trigger_name,
    trigger_type,
    triggering_event
FROM all_triggers
WHERE owner = 'YOUR_SCHEMA';

List Indexes
------------
SELECT 
    index_name,
    table_name,
    uniqueness
FROM all_indexes
WHERE table_owner = 'YOUR_SCHEMA';

List Constraints (Primary, Foreign, Unique Keys)
------------------------------------------------
SELECT 
    constraint_name,
    constraint_type,
    table_name
FROM all_constraints
WHERE owner = 'YOUR_SCHEMA';

List Sequences
--------------
SELECT 
    sequence_name
FROM all_sequences
WHERE sequence_owner = 'YOUR_SCHEMA';

List Roles and Users
--------------------
SELECT 
    username
FROM all_users;

List Table Statistics
---------------------
SELECT 
    table_name,
    num_rows,
    blocks,
    empty_blocks,
    avg_row_len
FROM all_tables
WHERE owner = 'YOUR_SCHEMA';

List Active Sessions
--------------------
SELECT 
    sid,
    serial#,
    username,
    status,
    machine
FROM v$session;

List Locks
----------
SELECT 
    sid,
    serial#,
    type,
    mode_held,
    mode_requested
FROM v$lock;

List Partitions
---------------
SELECT 
    table_name,
    partition_name,
    high_value
FROM all_tab_partitions
WHERE table_owner = 'YOUR_SCHEMA';

List User Privileges
--------------------
SELECT 
    grantee,
    privilege,
    table_name
FROM all_tab_privs
WHERE owner = 'YOUR_SCHEMA';

List Database Settings
----------------------
SELECT 
    parameter,
    value
FROM v$parameter;

List Foreign Key Relationships
------------------------------
SELECT 
    constraint_name,
    table_name,
    column_name,
    r_constraint_name AS foreign_constraint,
    r_table_name AS foreign_table,
    r_column_name AS foreign_column
FROM all_cons_columns
JOIN all_constraints ON all_cons_columns.constraint_name = all_constraints.constraint_name
WHERE all_constraints.constraint_type = 'R'
  AND all_constraints.owner = 'YOUR_SCHEMA';

List Triggers Associated with a Specific Table
----------------------------------------------
SELECT 
    trigger_name
FROM all_triggers
WHERE table_name = 'YOUR_TABLE_NAME'
  AND owner = 'YOUR_SCHEMA';

List Default Values for Columns
-------------------------------
SELECT 
    column_name,
    column_default
FROM all_tab_columns
WHERE table_name = 'YOUR_TABLE_NAME'
  AND owner = 'YOUR_SCHEMA';

List Catalog Objects
--------------------
SELECT 
    object_name,
    object_type
FROM all_objects
WHERE object_type IN ('TABLE', 'VIEW', 'PROCEDURE', 'SEQUENCE')
  AND owner = 'YOUR_SCHEMA';

List (Group) Roles(Magyarul simán csak roleok xd) - Oracle does not have a direct equivalent of PostgreSQL's group roles. However, you can list roles:
--------------------------------------------------
SELECT 
    role,
    admin_option
FROM dba_roles;

List Type Conversions Instead Of Casts - Oracle does not have a direct equivalent to PostgreSQL's pg_cast. However, you can get a list of type conversions:
--------------------------------------
SELECT 
    src_type_name,
    dest_type_name
FROM all_type_conversions
WHERE src_owner = 'YOUR_SCHEMA'
  AND dest_owner = 'YOUR_SCHEMA';

ListPublications - X
----------------
Oracle does not have a direct equivalent to PostgreSQL's publications. For Oracle Streams or GoldenGate, refer to specific documentation or system views.

List Collations - Oracle uses character sets rather than collations directly, so you would typically query:
---------------
SELECT 
    character_set_name
FROM nls_database_parameters;

List Domains - Oracle uses domain types as user-defined types:
------------
SELECT 
    type_name,
    type_owner
FROM all_types
WHERE type_owner = 'YOUR_SCHEMA';

List FTS Configurations - Oracle Text configurations:
SELECT 
    configuration_name
FROM all_ctx_index_settings;

List FTS Dictionaries
---------------------
SELECT 
    dictionary_name
FROM all_ctx_dictionaries;

List FTS Parsers
----------------
SELECT 
    parser_name
FROM all_ctx_parsers;

List FTS Templates
------------------
SELECT 
    template_name
FROM all_ctx_templates;

List Tablespaces
----------------
SELECT 
    tablespace_name
FROM dba_tablespaces;