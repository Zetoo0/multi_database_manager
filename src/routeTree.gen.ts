/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WelcomeImport } from './routes/welcome'
import { Route as QueryImport } from './routes/query'
import { Route as IndexImport } from './routes/index'
import { Route as SettingsMenusImport } from './routes/settings/_menus'
import { Route as ObjectCreateImport } from './routes/object/_create'
import { Route as MigrationMigrationImport } from './routes/migration/_migration'
import { Route as ConnectConnectionImport } from './routes/connect/_connection'
import { Route as SettingsMenusIndexImport } from './routes/settings/_menus/index'
import { Route as SettingsMenusLanguageImport } from './routes/settings/_menus/language'
import { Route as SettingsMenusAppearanceImport } from './routes/settings/_menus/appearance'
import { Route as SettingsMenusAboutImport } from './routes/settings/_menus/about'
import { Route as ObjectPropertiesObjectPropertiesImport } from './routes/object/_properties/ObjectProperties'
import { Route as ObjectCreateTableImport } from './routes/object/_create/table'
import { Route as ObjectCreateDefinitionsImport } from './routes/object/_create/definitions'
import { Route as ObjectCreateColumnsImport } from './routes/object/_create/columns'
import { Route as ObjectCreateCodeImport } from './routes/object/_create/code'
import { Route as ObjectCreateObjectPropertiesImport } from './routes/object/_create/ObjectProperties'
import { Route as MigrationMigrationMigrationPageImport } from './routes/migration/_migration/migrationPage'
import { Route as ConnectConnectionValamiConnectionImport } from './routes/connect/_connection/valamiConnection'
import { Route as ConnectConnectionConnectionsImport } from './routes/connect/_connection/connections'

// Create Virtual Routes

const SettingsImport = createFileRoute('/settings')()
const ObjectImport = createFileRoute('/object')()
const MigrationImport = createFileRoute('/migration')()
const ConnectImport = createFileRoute('/connect')()

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const ObjectRoute = ObjectImport.update({
  path: '/object',
  getParentRoute: () => rootRoute,
} as any)

const MigrationRoute = MigrationImport.update({
  path: '/migration',
  getParentRoute: () => rootRoute,
} as any)

const ConnectRoute = ConnectImport.update({
  path: '/connect',
  getParentRoute: () => rootRoute,
} as any)

const WelcomeRoute = WelcomeImport.update({
  path: '/welcome',
  getParentRoute: () => rootRoute,
} as any)

const QueryRoute = QueryImport.update({
  path: '/query',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsMenusRoute = SettingsMenusImport.update({
  id: '/_menus',
  getParentRoute: () => SettingsRoute,
} as any)

const ObjectCreateRoute = ObjectCreateImport.update({
  id: '/_create',
  getParentRoute: () => ObjectRoute,
} as any)

const MigrationMigrationRoute = MigrationMigrationImport.update({
  id: '/_migration',
  getParentRoute: () => MigrationRoute,
} as any)

const ConnectConnectionRoute = ConnectConnectionImport.update({
  id: '/_connection',
  getParentRoute: () => ConnectRoute,
} as any)

const SettingsMenusIndexRoute = SettingsMenusIndexImport.update({
  path: '/',
  getParentRoute: () => SettingsMenusRoute,
} as any)

const SettingsMenusLanguageRoute = SettingsMenusLanguageImport.update({
  path: '/language',
  getParentRoute: () => SettingsMenusRoute,
} as any)

const SettingsMenusAppearanceRoute = SettingsMenusAppearanceImport.update({
  path: '/appearance',
  getParentRoute: () => SettingsMenusRoute,
} as any)

const SettingsMenusAboutRoute = SettingsMenusAboutImport.update({
  path: '/about',
  getParentRoute: () => SettingsMenusRoute,
} as any)

const ObjectPropertiesObjectPropertiesRoute =
  ObjectPropertiesObjectPropertiesImport.update({
    path: '/ObjectProperties',
    getParentRoute: () => ObjectRoute,
  } as any)

const ObjectCreateTableRoute = ObjectCreateTableImport.update({
  path: '/table',
  getParentRoute: () => ObjectCreateRoute,
} as any)

const ObjectCreateDefinitionsRoute = ObjectCreateDefinitionsImport.update({
  path: '/definitions',
  getParentRoute: () => ObjectCreateRoute,
} as any)

const ObjectCreateColumnsRoute = ObjectCreateColumnsImport.update({
  path: '/columns',
  getParentRoute: () => ObjectCreateRoute,
} as any)

const ObjectCreateCodeRoute = ObjectCreateCodeImport.update({
  path: '/code',
  getParentRoute: () => ObjectCreateRoute,
} as any)

const ObjectCreateObjectPropertiesRoute =
  ObjectCreateObjectPropertiesImport.update({
    path: '/ObjectProperties',
    getParentRoute: () => ObjectCreateRoute,
  } as any)

const MigrationMigrationMigrationPageRoute =
  MigrationMigrationMigrationPageImport.update({
    path: '/migrationPage',
    getParentRoute: () => MigrationMigrationRoute,
  } as any)

const ConnectConnectionValamiConnectionRoute =
  ConnectConnectionValamiConnectionImport.update({
    path: '/valamiConnection',
    getParentRoute: () => ConnectConnectionRoute,
  } as any)

const ConnectConnectionConnectionsRoute =
  ConnectConnectionConnectionsImport.update({
    path: '/connections',
    getParentRoute: () => ConnectConnectionRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/query': {
      id: '/query'
      path: '/query'
      fullPath: '/query'
      preLoaderRoute: typeof QueryImport
      parentRoute: typeof rootRoute
    }
    '/welcome': {
      id: '/welcome'
      path: '/welcome'
      fullPath: '/welcome'
      preLoaderRoute: typeof WelcomeImport
      parentRoute: typeof rootRoute
    }
    '/connect': {
      id: '/connect'
      path: '/connect'
      fullPath: '/connect'
      preLoaderRoute: typeof ConnectImport
      parentRoute: typeof rootRoute
    }
    '/connect/_connection': {
      id: '/connect/_connection'
      path: '/connect'
      fullPath: '/connect'
      preLoaderRoute: typeof ConnectConnectionImport
      parentRoute: typeof ConnectRoute
    }
    '/migration': {
      id: '/migration'
      path: '/migration'
      fullPath: '/migration'
      preLoaderRoute: typeof MigrationImport
      parentRoute: typeof rootRoute
    }
    '/migration/_migration': {
      id: '/migration/_migration'
      path: '/migration'
      fullPath: '/migration'
      preLoaderRoute: typeof MigrationMigrationImport
      parentRoute: typeof MigrationRoute
    }
    '/object': {
      id: '/object'
      path: '/object'
      fullPath: '/object'
      preLoaderRoute: typeof ObjectImport
      parentRoute: typeof rootRoute
    }
    '/object/_create': {
      id: '/object/_create'
      path: '/object'
      fullPath: '/object'
      preLoaderRoute: typeof ObjectCreateImport
      parentRoute: typeof ObjectRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/settings/_menus': {
      id: '/settings/_menus'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsMenusImport
      parentRoute: typeof SettingsRoute
    }
    '/connect/_connection/connections': {
      id: '/connect/_connection/connections'
      path: '/connections'
      fullPath: '/connect/connections'
      preLoaderRoute: typeof ConnectConnectionConnectionsImport
      parentRoute: typeof ConnectConnectionImport
    }
    '/connect/_connection/valamiConnection': {
      id: '/connect/_connection/valamiConnection'
      path: '/valamiConnection'
      fullPath: '/connect/valamiConnection'
      preLoaderRoute: typeof ConnectConnectionValamiConnectionImport
      parentRoute: typeof ConnectConnectionImport
    }
    '/migration/_migration/migrationPage': {
      id: '/migration/_migration/migrationPage'
      path: '/migrationPage'
      fullPath: '/migration/migrationPage'
      preLoaderRoute: typeof MigrationMigrationMigrationPageImport
      parentRoute: typeof MigrationMigrationImport
    }
    '/object/_create/ObjectProperties': {
      id: '/object/_create/ObjectProperties'
      path: '/ObjectProperties'
      fullPath: '/object/ObjectProperties'
      preLoaderRoute: typeof ObjectCreateObjectPropertiesImport
      parentRoute: typeof ObjectCreateImport
    }
    '/object/_create/code': {
      id: '/object/_create/code'
      path: '/code'
      fullPath: '/object/code'
      preLoaderRoute: typeof ObjectCreateCodeImport
      parentRoute: typeof ObjectCreateImport
    }
    '/object/_create/columns': {
      id: '/object/_create/columns'
      path: '/columns'
      fullPath: '/object/columns'
      preLoaderRoute: typeof ObjectCreateColumnsImport
      parentRoute: typeof ObjectCreateImport
    }
    '/object/_create/definitions': {
      id: '/object/_create/definitions'
      path: '/definitions'
      fullPath: '/object/definitions'
      preLoaderRoute: typeof ObjectCreateDefinitionsImport
      parentRoute: typeof ObjectCreateImport
    }
    '/object/_create/table': {
      id: '/object/_create/table'
      path: '/table'
      fullPath: '/object/table'
      preLoaderRoute: typeof ObjectCreateTableImport
      parentRoute: typeof ObjectCreateImport
    }
    '/object/_properties/ObjectProperties': {
      id: '/object/_properties/ObjectProperties'
      path: '/ObjectProperties'
      fullPath: '/object/ObjectProperties'
      preLoaderRoute: typeof ObjectPropertiesObjectPropertiesImport
      parentRoute: typeof ObjectImport
    }
    '/settings/_menus/about': {
      id: '/settings/_menus/about'
      path: '/about'
      fullPath: '/settings/about'
      preLoaderRoute: typeof SettingsMenusAboutImport
      parentRoute: typeof SettingsMenusImport
    }
    '/settings/_menus/appearance': {
      id: '/settings/_menus/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof SettingsMenusAppearanceImport
      parentRoute: typeof SettingsMenusImport
    }
    '/settings/_menus/language': {
      id: '/settings/_menus/language'
      path: '/language'
      fullPath: '/settings/language'
      preLoaderRoute: typeof SettingsMenusLanguageImport
      parentRoute: typeof SettingsMenusImport
    }
    '/settings/_menus/': {
      id: '/settings/_menus/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof SettingsMenusIndexImport
      parentRoute: typeof SettingsMenusImport
    }
  }
}

// Create and export the route tree

interface ConnectConnectionRouteChildren {
  ConnectConnectionConnectionsRoute: typeof ConnectConnectionConnectionsRoute
  ConnectConnectionValamiConnectionRoute: typeof ConnectConnectionValamiConnectionRoute
}

const ConnectConnectionRouteChildren: ConnectConnectionRouteChildren = {
  ConnectConnectionConnectionsRoute: ConnectConnectionConnectionsRoute,
  ConnectConnectionValamiConnectionRoute:
    ConnectConnectionValamiConnectionRoute,
}

const ConnectConnectionRouteWithChildren =
  ConnectConnectionRoute._addFileChildren(ConnectConnectionRouteChildren)

interface ConnectRouteChildren {
  ConnectConnectionRoute: typeof ConnectConnectionRouteWithChildren
}

const ConnectRouteChildren: ConnectRouteChildren = {
  ConnectConnectionRoute: ConnectConnectionRouteWithChildren,
}

const ConnectRouteWithChildren =
  ConnectRoute._addFileChildren(ConnectRouteChildren)

interface MigrationMigrationRouteChildren {
  MigrationMigrationMigrationPageRoute: typeof MigrationMigrationMigrationPageRoute
}

const MigrationMigrationRouteChildren: MigrationMigrationRouteChildren = {
  MigrationMigrationMigrationPageRoute: MigrationMigrationMigrationPageRoute,
}

const MigrationMigrationRouteWithChildren =
  MigrationMigrationRoute._addFileChildren(MigrationMigrationRouteChildren)

interface MigrationRouteChildren {
  MigrationMigrationRoute: typeof MigrationMigrationRouteWithChildren
}

const MigrationRouteChildren: MigrationRouteChildren = {
  MigrationMigrationRoute: MigrationMigrationRouteWithChildren,
}

const MigrationRouteWithChildren = MigrationRoute._addFileChildren(
  MigrationRouteChildren,
)

interface ObjectCreateRouteChildren {
  ObjectCreateObjectPropertiesRoute: typeof ObjectCreateObjectPropertiesRoute
  ObjectCreateCodeRoute: typeof ObjectCreateCodeRoute
  ObjectCreateColumnsRoute: typeof ObjectCreateColumnsRoute
  ObjectCreateDefinitionsRoute: typeof ObjectCreateDefinitionsRoute
  ObjectCreateTableRoute: typeof ObjectCreateTableRoute
}

const ObjectCreateRouteChildren: ObjectCreateRouteChildren = {
  ObjectCreateObjectPropertiesRoute: ObjectCreateObjectPropertiesRoute,
  ObjectCreateCodeRoute: ObjectCreateCodeRoute,
  ObjectCreateColumnsRoute: ObjectCreateColumnsRoute,
  ObjectCreateDefinitionsRoute: ObjectCreateDefinitionsRoute,
  ObjectCreateTableRoute: ObjectCreateTableRoute,
}

const ObjectCreateRouteWithChildren = ObjectCreateRoute._addFileChildren(
  ObjectCreateRouteChildren,
)

interface ObjectRouteChildren {
  ObjectCreateRoute: typeof ObjectCreateRouteWithChildren
  ObjectPropertiesObjectPropertiesRoute: typeof ObjectPropertiesObjectPropertiesRoute
}

const ObjectRouteChildren: ObjectRouteChildren = {
  ObjectCreateRoute: ObjectCreateRouteWithChildren,
  ObjectPropertiesObjectPropertiesRoute: ObjectPropertiesObjectPropertiesRoute,
}

const ObjectRouteWithChildren =
  ObjectRoute._addFileChildren(ObjectRouteChildren)

interface SettingsMenusRouteChildren {
  SettingsMenusAboutRoute: typeof SettingsMenusAboutRoute
  SettingsMenusAppearanceRoute: typeof SettingsMenusAppearanceRoute
  SettingsMenusLanguageRoute: typeof SettingsMenusLanguageRoute
  SettingsMenusIndexRoute: typeof SettingsMenusIndexRoute
}

const SettingsMenusRouteChildren: SettingsMenusRouteChildren = {
  SettingsMenusAboutRoute: SettingsMenusAboutRoute,
  SettingsMenusAppearanceRoute: SettingsMenusAppearanceRoute,
  SettingsMenusLanguageRoute: SettingsMenusLanguageRoute,
  SettingsMenusIndexRoute: SettingsMenusIndexRoute,
}

const SettingsMenusRouteWithChildren = SettingsMenusRoute._addFileChildren(
  SettingsMenusRouteChildren,
)

interface SettingsRouteChildren {
  SettingsMenusRoute: typeof SettingsMenusRouteWithChildren
}

const SettingsRouteChildren: SettingsRouteChildren = {
  SettingsMenusRoute: SettingsMenusRouteWithChildren,
}

const SettingsRouteWithChildren = SettingsRoute._addFileChildren(
  SettingsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/query': typeof QueryRoute
  '/welcome': typeof WelcomeRoute
  '/connect': typeof ConnectConnectionRouteWithChildren
  '/migration': typeof MigrationMigrationRouteWithChildren
  '/object': typeof ObjectCreateRouteWithChildren
  '/settings': typeof SettingsMenusRouteWithChildren
  '/connect/connections': typeof ConnectConnectionConnectionsRoute
  '/connect/valamiConnection': typeof ConnectConnectionValamiConnectionRoute
  '/migration/migrationPage': typeof MigrationMigrationMigrationPageRoute
  '/object/ObjectProperties': typeof ObjectPropertiesObjectPropertiesRoute
  '/object/code': typeof ObjectCreateCodeRoute
  '/object/columns': typeof ObjectCreateColumnsRoute
  '/object/definitions': typeof ObjectCreateDefinitionsRoute
  '/object/table': typeof ObjectCreateTableRoute
  '/settings/about': typeof SettingsMenusAboutRoute
  '/settings/appearance': typeof SettingsMenusAppearanceRoute
  '/settings/language': typeof SettingsMenusLanguageRoute
  '/settings/': typeof SettingsMenusIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/query': typeof QueryRoute
  '/welcome': typeof WelcomeRoute
  '/connect': typeof ConnectConnectionRouteWithChildren
  '/migration': typeof MigrationMigrationRouteWithChildren
  '/object': typeof ObjectCreateRouteWithChildren
  '/settings': typeof SettingsMenusIndexRoute
  '/connect/connections': typeof ConnectConnectionConnectionsRoute
  '/connect/valamiConnection': typeof ConnectConnectionValamiConnectionRoute
  '/migration/migrationPage': typeof MigrationMigrationMigrationPageRoute
  '/object/ObjectProperties': typeof ObjectPropertiesObjectPropertiesRoute
  '/object/code': typeof ObjectCreateCodeRoute
  '/object/columns': typeof ObjectCreateColumnsRoute
  '/object/definitions': typeof ObjectCreateDefinitionsRoute
  '/object/table': typeof ObjectCreateTableRoute
  '/settings/about': typeof SettingsMenusAboutRoute
  '/settings/appearance': typeof SettingsMenusAppearanceRoute
  '/settings/language': typeof SettingsMenusLanguageRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/query': typeof QueryRoute
  '/welcome': typeof WelcomeRoute
  '/connect': typeof ConnectRouteWithChildren
  '/connect/_connection': typeof ConnectConnectionRouteWithChildren
  '/migration': typeof MigrationRouteWithChildren
  '/migration/_migration': typeof MigrationMigrationRouteWithChildren
  '/object': typeof ObjectRouteWithChildren
  '/object/_create': typeof ObjectCreateRouteWithChildren
  '/settings': typeof SettingsRouteWithChildren
  '/settings/_menus': typeof SettingsMenusRouteWithChildren
  '/connect/_connection/connections': typeof ConnectConnectionConnectionsRoute
  '/connect/_connection/valamiConnection': typeof ConnectConnectionValamiConnectionRoute
  '/migration/_migration/migrationPage': typeof MigrationMigrationMigrationPageRoute
  '/object/_create/ObjectProperties': typeof ObjectCreateObjectPropertiesRoute
  '/object/_create/code': typeof ObjectCreateCodeRoute
  '/object/_create/columns': typeof ObjectCreateColumnsRoute
  '/object/_create/definitions': typeof ObjectCreateDefinitionsRoute
  '/object/_create/table': typeof ObjectCreateTableRoute
  '/object/_properties/ObjectProperties': typeof ObjectPropertiesObjectPropertiesRoute
  '/settings/_menus/about': typeof SettingsMenusAboutRoute
  '/settings/_menus/appearance': typeof SettingsMenusAppearanceRoute
  '/settings/_menus/language': typeof SettingsMenusLanguageRoute
  '/settings/_menus/': typeof SettingsMenusIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/query'
    | '/welcome'
    | '/connect'
    | '/migration'
    | '/object'
    | '/settings'
    | '/connect/connections'
    | '/connect/valamiConnection'
    | '/migration/migrationPage'
    | '/object/ObjectProperties'
    | '/object/code'
    | '/object/columns'
    | '/object/definitions'
    | '/object/table'
    | '/settings/about'
    | '/settings/appearance'
    | '/settings/language'
    | '/settings/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/query'
    | '/welcome'
    | '/connect'
    | '/migration'
    | '/object'
    | '/settings'
    | '/connect/connections'
    | '/connect/valamiConnection'
    | '/migration/migrationPage'
    | '/object/ObjectProperties'
    | '/object/code'
    | '/object/columns'
    | '/object/definitions'
    | '/object/table'
    | '/settings/about'
    | '/settings/appearance'
    | '/settings/language'
  id:
    | '__root__'
    | '/'
    | '/query'
    | '/welcome'
    | '/connect'
    | '/connect/_connection'
    | '/migration'
    | '/migration/_migration'
    | '/object'
    | '/object/_create'
    | '/settings'
    | '/settings/_menus'
    | '/connect/_connection/connections'
    | '/connect/_connection/valamiConnection'
    | '/migration/_migration/migrationPage'
    | '/object/_create/ObjectProperties'
    | '/object/_create/code'
    | '/object/_create/columns'
    | '/object/_create/definitions'
    | '/object/_create/table'
    | '/object/_properties/ObjectProperties'
    | '/settings/_menus/about'
    | '/settings/_menus/appearance'
    | '/settings/_menus/language'
    | '/settings/_menus/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  QueryRoute: typeof QueryRoute
  WelcomeRoute: typeof WelcomeRoute
  ConnectRoute: typeof ConnectRouteWithChildren
  MigrationRoute: typeof MigrationRouteWithChildren
  ObjectRoute: typeof ObjectRouteWithChildren
  SettingsRoute: typeof SettingsRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  QueryRoute: QueryRoute,
  WelcomeRoute: WelcomeRoute,
  ConnectRoute: ConnectRouteWithChildren,
  MigrationRoute: MigrationRouteWithChildren,
  ObjectRoute: ObjectRouteWithChildren,
  SettingsRoute: SettingsRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/query",
        "/welcome",
        "/connect",
        "/migration",
        "/object",
        "/settings"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/query": {
      "filePath": "query.tsx"
    },
    "/welcome": {
      "filePath": "welcome.tsx"
    },
    "/connect": {
      "filePath": "connect",
      "children": [
        "/connect/_connection"
      ]
    },
    "/connect/_connection": {
      "filePath": "connect/_connection.tsx",
      "parent": "/connect",
      "children": [
        "/connect/_connection/connections",
        "/connect/_connection/valamiConnection"
      ]
    },
    "/migration": {
      "filePath": "migration",
      "children": [
        "/migration/_migration"
      ]
    },
    "/migration/_migration": {
      "filePath": "migration/_migration.tsx",
      "parent": "/migration",
      "children": [
        "/migration/_migration/migrationPage"
      ]
    },
    "/object": {
      "filePath": "object",
      "children": [
        "/object/_create",
        "/object/_properties/ObjectProperties"
      ]
    },
    "/object/_create": {
      "filePath": "object/_create.tsx",
      "parent": "/object",
      "children": [
        "/object/_create/ObjectProperties",
        "/object/_create/code",
        "/object/_create/columns",
        "/object/_create/definitions",
        "/object/_create/table"
      ]
    },
    "/settings": {
      "filePath": "settings",
      "children": [
        "/settings/_menus"
      ]
    },
    "/settings/_menus": {
      "filePath": "settings/_menus.tsx",
      "parent": "/settings",
      "children": [
        "/settings/_menus/about",
        "/settings/_menus/appearance",
        "/settings/_menus/language",
        "/settings/_menus/"
      ]
    },
    "/connect/_connection/connections": {
      "filePath": "connect/_connection/connections.tsx",
      "parent": "/connect/_connection"
    },
    "/connect/_connection/valamiConnection": {
      "filePath": "connect/_connection/valamiConnection.tsx",
      "parent": "/connect/_connection"
    },
    "/migration/_migration/migrationPage": {
      "filePath": "migration/_migration/migrationPage.tsx",
      "parent": "/migration/_migration"
    },
    "/object/_create/ObjectProperties": {
      "filePath": "object/_create/ObjectProperties.tsx",
      "parent": "/object/_create"
    },
    "/object/_create/code": {
      "filePath": "object/_create/code.tsx",
      "parent": "/object/_create"
    },
    "/object/_create/columns": {
      "filePath": "object/_create/columns.tsx",
      "parent": "/object/_create"
    },
    "/object/_create/definitions": {
      "filePath": "object/_create/definitions.tsx",
      "parent": "/object/_create"
    },
    "/object/_create/table": {
      "filePath": "object/_create/table.tsx",
      "parent": "/object/_create"
    },
    "/object/_properties/ObjectProperties": {
      "filePath": "object/_properties/ObjectProperties.tsx",
      "parent": "/object"
    },
    "/settings/_menus/about": {
      "filePath": "settings/_menus/about.tsx",
      "parent": "/settings/_menus"
    },
    "/settings/_menus/appearance": {
      "filePath": "settings/_menus/appearance.tsx",
      "parent": "/settings/_menus"
    },
    "/settings/_menus/language": {
      "filePath": "settings/_menus/language.tsx",
      "parent": "/settings/_menus"
    },
    "/settings/_menus/": {
      "filePath": "settings/_menus/index.tsx",
      "parent": "/settings/_menus"
    }
  }
}
ROUTE_MANIFEST_END */
